use bevy::math::{const_quat, const_vec3, Quat, Vec3};

pub fn transform(i: impl Into<usize>) -> (Vec3, Quat) {
    TRANSFORMS[i.into()]
}

pub const TRANSFORMS: [(Vec3, Quat); 54] = [
    (const_vec3!([-1., 1.5, -1.]), const_quat!([0., 0., 0., 1.])),
    (const_vec3!([-1., 1.5, 0.]), const_quat!([0., 0., 0., 1.])),
    (const_vec3!([-1., 1.5, 1.]), const_quat!([0., 0., 0., 1.])),
    (const_vec3!([0., 1.5, -1.]), const_quat!([0., 0., 0., 1.])),
    (const_vec3!([0., 1.5, 0.]), const_quat!([0., 0., 0., 1.])),
    (const_vec3!([0., 1.5, 1.]), const_quat!([0., 0., 0., 1.])),
    (const_vec3!([1., 1.5, -1.]), const_quat!([0., 0., 0., 1.])),
    (const_vec3!([1., 1.5, 0.]), const_quat!([0., 0., 0., 1.])),
    (const_vec3!([1., 1.5, 1.]), const_quat!([0., 0., 0., 1.])),
    (
        const_vec3!([-1., 1., -1.5]),
        const_quat!([-0.7071068, 0., 0., 0.7071068]),
    ),
    (
        const_vec3!([0., 1., -1.5]),
        const_quat!([-0.7071068, 0., 0., 0.7071068]),
    ),
    (
        const_vec3!([1., 1., -1.5]),
        const_quat!([-0.7071068, 0., 0., 0.7071068]),
    ),
    (
        const_vec3!([-1., 0., -1.5]),
        const_quat!([-0.7071068, 0., 0., 0.7071068]),
    ),
    (
        const_vec3!([0., 0., -1.5]),
        const_quat!([-0.7071068, 0., 0., 0.7071068]),
    ),
    (
        const_vec3!([1., 0., -1.5]),
        const_quat!([-0.7071068, 0., 0., 0.7071068]),
    ),
    (
        const_vec3!([-1., -1., -1.5]),
        const_quat!([-0.7071068, 0., 0., 0.7071068]),
    ),
    (
        const_vec3!([0., -1., -1.5]),
        const_quat!([-0.7071068, 0., 0., 0.7071068]),
    ),
    (
        const_vec3!([1., -1., -1.5]),
        const_quat!([-0.7071068, 0., 0., 0.7071068]),
    ),
    (
        const_vec3!([1.5, 1., -1.]),
        const_quat!([0., 0., -0.7071068, 0.7071068]),
    ),
    (
        const_vec3!([1.5, 1., 0.]),
        const_quat!([0., 0., -0.7071068, 0.7071068]),
    ),
    (
        const_vec3!([1.5, 1., 1.]),
        const_quat!([0., 0., -0.7071068, 0.7071068]),
    ),
    (
        const_vec3!([1.5, 0., -1.]),
        const_quat!([0., 0., -0.7071068, 0.7071068]),
    ),
    (
        const_vec3!([1.5, 0., 0.]),
        const_quat!([0., 0., -0.7071068, 0.7071068]),
    ),
    (
        const_vec3!([1.5, 0., 1.]),
        const_quat!([0., 0., -0.7071068, 0.7071068]),
    ),
    (
        const_vec3!([1.5, -1., -1.]),
        const_quat!([0., 0., -0.7071068, 0.7071068]),
    ),
    (
        const_vec3!([1.5, -1., 0.]),
        const_quat!([0., 0., -0.7071068, 0.7071068]),
    ),
    (
        const_vec3!([1.5, -1., 1.]),
        const_quat!([0., 0., -0.7071068, 0.7071068]),
    ),
    (
        const_vec3!([1., 1., 1.5]),
        const_quat!([0.7071068, 0., 0., 0.7071068]),
    ),
    (
        const_vec3!([0., 1., 1.5]),
        const_quat!([0.7071068, 0., 0., 0.7071068]),
    ),
    (
        const_vec3!([-1., 1., 1.5]),
        const_quat!([0.7071068, 0., 0., 0.7071068]),
    ),
    (
        const_vec3!([1., 0., 1.5]),
        const_quat!([0.7071068, 0., 0., 0.7071068]),
    ),
    (
        const_vec3!([0., 0., 1.5]),
        const_quat!([0.7071068, 0., 0., 0.7071068]),
    ),
    (
        const_vec3!([-1., 0., 1.5]),
        const_quat!([0.7071068, 0., 0., 0.7071068]),
    ),
    (
        const_vec3!([1., -1., 1.5]),
        const_quat!([0.7071068, 0., 0., 0.7071068]),
    ),
    (
        const_vec3!([0., -1., 1.5]),
        const_quat!([0.7071068, 0., 0., 0.7071068]),
    ),
    (
        const_vec3!([-1., -1., 1.5]),
        const_quat!([0.7071068, 0., 0., 0.7071068]),
    ),
    (
        const_vec3!([-1.5, 1., 1.]),
        const_quat!([0., 0., 0.7071068, 0.7071068]),
    ),
    (
        const_vec3!([-1.5, 1., 0.]),
        const_quat!([0., 0., 0.7071068, 0.7071068]),
    ),
    (
        const_vec3!([-1.5, 1., -1.]),
        const_quat!([0., 0., 0.7071068, 0.7071068]),
    ),
    (
        const_vec3!([-1.5, 0., 1.]),
        const_quat!([0., 0., 0.7071068, 0.7071068]),
    ),
    (
        const_vec3!([-1.5, 0., 0.]),
        const_quat!([0., 0., 0.7071068, 0.7071068]),
    ),
    (
        const_vec3!([-1.5, 0., -1.]),
        const_quat!([0., 0., 0.7071068, 0.7071068]),
    ),
    (
        const_vec3!([-1.5, -1., 1.]),
        const_quat!([0., 0., 0.7071068, 0.7071068]),
    ),
    (
        const_vec3!([-1.5, -1., 0.]),
        const_quat!([0., 0., 0.7071068, 0.7071068]),
    ),
    (
        const_vec3!([-1.5, -1., -1.]),
        const_quat!([0., 0., 0.7071068, 0.7071068]),
    ),
    (const_vec3!([1., -1.5, -1.]), const_quat!([1., 0., 0., 0.])),
    (const_vec3!([1., -1.5, 0.]), const_quat!([1., 0., 0., 0.])),
    (const_vec3!([1., -1.5, 1.]), const_quat!([1., 0., 0., 0.])),
    (const_vec3!([0., -1.5, -1.]), const_quat!([1., 0., 0., 0.])),
    (const_vec3!([0., -1.5, 0.]), const_quat!([1., 0., 0., 0.])),
    (const_vec3!([0., -1.5, 1.]), const_quat!([1., 0., 0., 0.])),
    (const_vec3!([-1., -1.5, -1.]), const_quat!([1., 0., 0., 0.])),
    (const_vec3!([-1., -1.5, 0.]), const_quat!([1., 0., 0., 0.])),
    (const_vec3!([-1., -1.5, 1.]), const_quat!([1., 0., 0., 0.])),
];
